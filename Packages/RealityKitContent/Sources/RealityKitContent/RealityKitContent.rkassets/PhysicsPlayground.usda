#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Chamber", "SpinX", "SpinY", "SpinZ", "SpinChamber", "Subject_1", "Subject_2", "Subject_3", "Subject_4", "Subject_5", "Scale"]
    def Sphere "Subject_1" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Chamber/SubjectMat>
        double radius = 0.1
        float3 xformOp:scale = (0.5, 0.5, 0.5)
        float3 xformOp:translate = (-0.0468508, 0.4935509, 0.32736534)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.1
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0

            def RealityKitStruct "massFrame"
            {
                float m_mass = 0.1

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double restitution = 1
            }
        }
    }

    def Xform "Chamber" (
        active = true
    )
    {
        reorder nameChildren = ["SubjectMat", "ChamberMat", "Wall_1", "Wall_2", "Wall_3", "Wall_4", "RCP_BehaviorsContainer", "OnAddedToScene", "Floor", "Ceiling"]
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Cube "Ceiling" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Floor", "DefaultMaterial", "Collider", "RigidBody"]
            rel material:binding = </Root/Chamber/ChamberMat> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 2
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 0.01, 1)
            float3 xformOp:translate = (0, 1, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (2, 2, 2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }
        }

        def Cube "Floor" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Ceiling", "DefaultMaterial", "Collider", "RigidBody"]
            rel material:binding = </Root/Chamber/ChamberMat>
            double size = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 0.01, 1)
            float3 xformOp:translate = (0, -1, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (2, 2, 2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }
        }

        def Material "ChamberMat"
        {
            reorder nameChildren = ["DefaultSurfaceShader", "PreviewSurface", "DefaultMaterial"]
            token cullMode = "front" (
                allowedTokens = ["unspecified", "none", "front", "back"]
            )
            token outputs:mtlx:surface.connect = </Root/Chamber/ChamberMat/PreviewSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Chamber/ChamberMat/DefaultSurfaceShader.outputs:surface>
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)

            def Shader "DefaultSurfaceShader" (
                active = true
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 1
                color3f inputs:diffuseColor = (0.83137256, 0.73333335, 0.73333335) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:opacity = 0.2
                float inputs:roughness = 0.75
                token outputs:surface
            }

            def Shader "PreviewSurface" (
                active = false
            )
            {
                uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                color3f inputs:diffuseColor
                float3 inputs:normal = (0, 0, -1)
                float inputs:opacity = 0
                float inputs:roughness = 1
                token outputs:out
                float2 ui:nodegraph:node:pos = (-357.21484, 137.21484)
                int ui:nodegraph:node:stackingOrder = 21
            }
        }

        def Cube "Wall_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (1.5707964, 0, 0)
            }
        )
        {
            reorder nameChildren = ["Ceiling", "DefaultMaterial", "Collider", "RigidBody"]
            rel material:binding = </Root/Chamber/ChamberMat>
            double size = 2
            float2 ui:nodegraph:node:pos = (-126.125, 109)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
            float3 xformOp:scale = (1, 0.01, 1)
            float3 xformOp:translate = (0, 0, 1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (2, 2, 2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }
        }

        def Cube "Wall_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (1.5707964, 0, 0)
            }
        )
        {
            reorder nameChildren = ["Ceiling", "DefaultMaterial", "Collider", "RigidBody"]
            rel material:binding = </Root/Chamber/ChamberMat>
            double size = 2
            float2 ui:nodegraph:node:pos = (-106.125, 129)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (0.7071067, 0.7071068, 0, 0)
            float3 xformOp:scale = (0.9999999, 0.009999998, 0.9999999)
            float3 xformOp:translate = (0, 0, -1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (2, 2, 2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }
        }

        def Cube "Wall_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, 0, 1.5707964)
            }
        )
        {
            reorder nameChildren = ["Ceiling", "DefaultMaterial", "Collider", "RigidBody"]
            rel material:binding = </Root/Chamber/ChamberMat>
            double size = 2
            float2 ui:nodegraph:node:pos = (-86.125, 149)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (0.70710677, 0, 0, 0.70710677)
            float3 xformOp:scale = (0.99999976, 0.009999996, 0.99999976)
            float3 xformOp:translate = (1, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (2, 2, 2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }
        }

        def Cube "Wall_4" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
            customData = {
                float3 rotationEulerHint = (0, 0, 1.5707964)
            }
        )
        {
            reorder nameChildren = ["Ceiling", "DefaultMaterial", "Collider", "RigidBody"]
            rel material:binding = </Root/Chamber/ChamberMat>
            double size = 2
            float2 ui:nodegraph:node:pos = (-66.125, 169)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (0.70710677, 0, 0, 0.70710677)
            float3 xformOp:scale = (0.99999964, 0.009999994, 0.99999964)
            float3 xformOp:translate = (-1, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (2, 2, 2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }
        }

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/Chamber/OnAddedToScene>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnAddedToScene"
        {
            rel actions = </Root/Chamber/OnAddedToScene/Action>
            uniform bool exclusive
            rel triggers = </Root/Chamber/OnAddedToScene/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/Chamber>
                token info:id = "SceneTransition"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/SpinChamber>
                rel animationLibraryKeyOverrideKey = </Root/Chamber/OnAddedToScene/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }

        def Material "SubjectMat"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Chamber/SubjectMat/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0.5
                color3f inputs:diffuseColor = (0.41960785, 0.003921569, 0.17254902) (
                    colorSpace = "srgb_texture"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def RealityKitTimeline "SpinY"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 13
                uniform token info:id = "6558A814-7A9B-4C0A-92F5-4EC381F9F4DA"
                double startTime = 0
                rel target = </Root/Chamber>

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }
        }
    }

    def RealityKitTimeline "SpinX"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 27
                uniform token info:id = "9E2E8E4B-B517-4052-8271-7881B0F851A4"
                float3 localAxis = (1, 0, 0)
                float revolutions = 1
                double startTime = 0
                rel target = </Root/Chamber>

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }
        }
    }

    def RealityKitTimeline "SpinChamber"
    {
        reorder nameChildren = ["Track", "Track2", "Track3", "Track4"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 13
                uniform token info:id = "1792B517-9D95-4094-B691-8E777CD69940"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/SpinY>
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 27
                uniform token info:id = "DFC8FEB8-3B77-47FB-A31B-D06352398302"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/SpinX>
            }
        }

        def RealityKitTrack "Track3"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 7.047410582094838
                uniform token info:id = "FE4ADDE6-3D5C-4559-A6A4-02A7F4158702"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/SpinZ>
            }
        }

        def RealityKitTrack "Track4"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 10.0000000001
                uniform token info:id = "778BB26A-103A-487E-B6EC-3B89F8FF0034"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/Scale>
            }
        }
    }

    def RealityKitTimeline "SpinZ"
    {
        reorder nameChildren = ["Track", "Track2"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 5
                uniform token info:id = "B53C3653-7A95-49D8-9C39-3581880D693A"
                double startTime = 0
                rel target = </Root/Chamber>

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }

            def RealityKitAction "BUmp"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 0
                uniform token info:id = "322FA61D-7FDE-40BC-8ED2-C106AF96B858"
                double startTime = 7.047410582094838
                rel timeline = </Root/Bump>
            }
        }
    }

    def RealityKitTimeline "Scale"
    {
        reorder nameChildren = ["Track2", "Track"]
        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Transform_To"
            {
                string actionKind = "moveTo"
                int blendLayer = 300
                double duration = 5
                uniform token info:id = "8844D022-640A-4606-8A38-C519AAD7AD6F"
                float3 position = (0, 0, 0)
                quatf rotation = (1, 0, 0, 0)
                float3 scale = (0.5, 0.5, 0.5)
                double startTime = 0
                rel target = </Root/Chamber>

                def RealityKitStruct "transformMode"
                {
                    rel referenceEntity = </Root>
                    token type = "parent"
                }

                def RealityKitStruct "timingFunction"
                {
                }
            }

            def RealityKitAction "Transform_To2"
            {
                string actionKind = "moveTo"
                int blendLayer = 300
                double duration = 5
                uniform token info:id = "8844D022-640A-4606-8A38-C519AAD7AD6F"
                float3 position = (0, 0, 0)
                quatf rotation = (1, 0, 0, 0)
                float3 scale = (1, 1, 1)
                double startTime = 5.0000000001
                rel target = </Root/Chamber>
                float2 ui:nodegraph:node:pos = (-126.125, 109)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "transformMode"
                {
                    rel referenceEntity = </Root>
                    token type = "parent"
                }

                def RealityKitStruct "timingFunction"
                {
                }
            }
        }
    }

    def Sphere "Subject_2" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Chamber/SubjectMat>
        double radius = 0.1
        float2 ui:nodegraph:node:pos = (-126.125, 109)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.5, 0.5, 0.5)
        float3 xformOp:translate = (0.33694944, -0.09686667, 0.3273654)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.1
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0

            def RealityKitStruct "massFrame"
            {
                float m_mass = 0.1

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double restitution = 1
            }
        }
    }

    def Sphere "Subject_3" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Chamber/SubjectMat>
        double radius = 0.1
        float2 ui:nodegraph:node:pos = (-106.125, 129)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.5, 0.5, 0.5)
        float3 xformOp:translate = (0.2784563, 0.7197977, 0.32736543)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.1
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0

            def RealityKitStruct "massFrame"
            {
                float m_mass = 0.1

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double restitution = 1
            }
        }
    }

    def Sphere "Subject_4" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Chamber/SubjectMat>
        double radius = 0.1
        float2 ui:nodegraph:node:pos = (-86.125, 149)
        int ui:nodegraph:node:stackingOrder = 3
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.5, 0.5, 0.5)
        float3 xformOp:translate = (-0.5572732, 0.68022233, 0.3273652)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.1
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0

            def RealityKitStruct "massFrame"
            {
                float m_mass = 0.1

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double restitution = 1
            }
        }
    }

    def Sphere "Subject_5" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Chamber/SubjectMat>
        double radius = 0.1
        float2 ui:nodegraph:node:pos = (-66.125, 169)
        int ui:nodegraph:node:stackingOrder = 4
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.5, 0.5, 0.5)
        float3 xformOp:translate = (-0.32034796, 0.31902695, 0.32736528)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.1
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            float angularDamping = 0
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0

            def RealityKitStruct "massFrame"
            {
                float m_mass = 0.1

                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double restitution = 1
            }
        }
    }
}

