#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Sphere_1", "Sphere_2", "Sphere_3", "Jiggle"]
    float3 xformOp:translate = (0, 1.5, -1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Xform "Jiggle" (
        active = true
    )
    {
        reorder nameChildren = ["end1", "ball1", "ball2", "ball3", "end2"]
        def Sphere "ball1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Jiggle/ball1/DefaultMaterial>
            double radius = 0.1
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Jiggle/ball1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float inputs:clearcoat = 1
                    color3f inputs:diffuseColor = (0.41960785, 0.003921569, 0.17254902) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:metallic = 0.1
                    float inputs:opacity = 0.8
                    float inputs:roughness = 0.15
                    token outputs:surface
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    float radius = 0.1
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitCustomComponent "RealityKitContent_AllowGestures"
            {
                uniform token info:id = "RealityKitContent.AllowGestures"
            }

            def RealityKitComponent "RigidBody"
            {
                uniform token info:id = "RealityKit.RigidBody"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }
        }

        def Sphere "ball2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Jiggle/ball2/DefaultMaterial>
            double radius = 0.1
            float2 ui:nodegraph:node:pos = (80, 80)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.3, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Jiggle/ball2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float inputs:clearcoat = 1
                    color3f inputs:diffuseColor = (0.003921569, 0.38039216, 0.41960785) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:metallic = 0.1
                    float inputs:opacity = 0.8
                    float inputs:roughness = 0.15
                    token outputs:surface
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    float radius = 0.1
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                uniform token info:id = "RealityKit.RigidBody"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }
        }

        def Sphere "ball3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Jiggle/ball3/DefaultMaterial>
            double radius = 0.1
            float2 ui:nodegraph:node:pos = (100, 100)
            int ui:nodegraph:node:stackingOrder = 5
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0.6, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Jiggle/ball3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float inputs:clearcoat = 1
                    color3f inputs:diffuseColor = (0.003921569, 0.17254902, 0.41960785) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:metallic = 0.1
                    float inputs:opacity = 0.8
                    float inputs:roughness = 0.15
                    token outputs:surface
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    float radius = 0.1
                    token shapeType = "Sphere"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                uniform token info:id = "RealityKit.RigidBody"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }
        }

        def Cube "end1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Jiggle/end1/DefaultMaterial>
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.2, 1, 1)
            float3 xformOp:translate = (-0.3, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Jiggle/end1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }
        }

        def Cube "end2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Jiggle/end2/DefaultMaterial>
            double size = 0.2
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.2, 1, 1)
            float3 xformOp:translate = (0.9, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:surface.connect = </Root/Jiggle/end2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double restitution = 1
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }
        }
    }
}

