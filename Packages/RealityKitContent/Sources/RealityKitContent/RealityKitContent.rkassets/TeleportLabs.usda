#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["StepDome", "StepSphereBlue", "StepSphereGreen", "StepSphereRed", "Waypoint_1"]
    def "StepDome" (
        active = true
        references = @BuildingBlocks/StepDome.usda@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "SkyDome"
        {
            over "Ground_01"
            {
                def RealityKitComponent "InputTarget"
                {
                    uniform token info:id = "RealityKit.InputTarget"
                }

                def RealityKitComponent "Collider"
                {
                    uint group = 1
                    uniform token info:id = "RealityKit.Collider"
                    uint mask = 4294967295
                    token type = "Default"

                    def RealityKitStruct "Shape"
                    {
                        float3 extent = (2392.6138, 0.00004786253, 2392.614)
                        token shapeType = "Box"

                        def RealityKitStruct "pose"
                        {
                            float3 position = (-0.00018310547, -0.47707692, -0.00024414062)
                        }
                    }
                }
            }
        }
    }

    def "StepSphereBlue" (
        active = true
        references = @BuildingBlocks/StepSphereBlue.usda@
    )
    {
        double radius = 0.5
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (5, 1, -5)

        over "Collider"
        {
            over "Shape"
            {
                float radius = 0.5
                token shapeType = "Sphere"
            }
        }
    }

    def "StepSphereGreen" (
        active = true
        references = @BuildingBlocks/StepSphereGreen.usda@
    )
    {
        double radius = 0.5
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 1, -5)

        over "Collider"
        {
            over "Shape"
            {
                float radius = 0.5
                token shapeType = "Sphere"
            }
        }
    }

    def "StepSphereRed" (
        active = true
        references = @BuildingBlocks/StepSphereRed.usda@
    )
    {
        double radius = 0.5
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-5, 1, -5)

        over "Collider"
        {
            over "Shape"
            {
                float radius = 0.5
                token shapeType = "Sphere"
            }
        }
    }

    def Cylinder "Waypoint_1" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.1
        rel material:binding = </Root/Waypoint_1/DefaultMaterial>
        double radius = 0.4
        float3 xformOp:translate = (0, 0, -3)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Waypoint_1/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.41960785, 0.003921569, 0.17254902) (
                    colorSpace = "srgb_texture"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.8, 0.1, 0.8)
                float height = 0.1
                float radius = 0.4
                token shapeType = "Capsule"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_TeleportTargetComponent"
        {
            uniform token info:id = "RealityKitContent.TeleportTargetComponent"
        }
    }

    def Cylinder "Waypoint_2" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.1
        rel material:binding = </Root/Waypoint_2/DefaultMaterial>
        double radius = 0.4
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (5, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Waypoint_2/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.41960785, 0.003921569, 0.17254902) (
                    colorSpace = "srgb_texture"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.8, 0.1, 0.8)
                float height = 0.1
                float radius = 0.4
                token shapeType = "Capsule"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_TeleportTargetComponent"
        {
            uniform token info:id = "RealityKitContent.TeleportTargetComponent"
        }
    }

    def Cylinder "Waypoint_3" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.1
        rel material:binding = </Root/Waypoint_3/DefaultMaterial>
        double radius = 0.4
        float2 ui:nodegraph:node:pos = (40, 40)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-5, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Waypoint_3/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.41960785, 0.003921569, 0.17254902) (
                    colorSpace = "srgb_texture"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.8, 0.1, 0.8)
                float height = 0.1
                float radius = 0.4
                token shapeType = "Capsule"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_TeleportTargetComponent"
        {
            uniform token info:id = "RealityKitContent.TeleportTargetComponent"
        }
    }

    def Cylinder "Waypoint_4" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.1
        rel material:binding = </Root/Waypoint_4/DefaultMaterial>
        double radius = 0.4
        float2 ui:nodegraph:node:pos = (60, 60)
        int ui:nodegraph:node:stackingOrder = 3
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 3)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Waypoint_4/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.41960785, 0.003921569, 0.17254902) (
                    colorSpace = "srgb_texture"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.8, 0.1, 0.8)
                float height = 0.1
                float radius = 0.4
                token shapeType = "Capsule"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitCustomComponent "RealityKitContent_TeleportTargetComponent"
        {
            uniform token info:id = "RealityKitContent.TeleportTargetComponent"
        }
    }
}

