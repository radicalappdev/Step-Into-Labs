#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def "architrave_pencil_round" (
        active = true
        prepend references = @architrave_pencil_round.usdz@
    )
    {
        float3 xformOp:scale = (1, 1, 2)
        float3 xformOp:translate = (0, 0, -1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Materials"
        {
            over "defaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex

                over "surfaceShader"
                {
                    color3f inputs:diffuseColor = (0.83137256, 0.73333335, 0.73333335) (
                        colorSpace = "srgb_displayp3"
                    )
                }
            }
        }
    }

    def "architrave_pencil_round_1" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 3.1415927, 0)
        }
        prepend references = @architrave_pencil_round.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (-4.371139e-8, 0, 1, 0)
        float3 xformOp:scale = (1, 1, 2)
        float3 xformOp:translate = (0, 0, -1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Materials"
        {
            over "defaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex

                over "surfaceShader"
                {
                    color3f inputs:diffuseColor = (0.83137256, 0.73333335, 0.73333335) (
                        colorSpace = "srgb_displayp3"
                    )
                }
            }
        }
    }

    def Cube "Cube" (
        active = false
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Cube/DefaultMaterial>
        double size = 1
        float3 xformOp:scale = (0.84, 2, 0.01)
        float3 xformOp:translate = (0, 1, -1.0197688)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface.connect = </Root/Cube/DefaultMaterial/OcclusionSurface.outputs:out>
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)

            def Shader "DefaultSurfaceShader" (
                active = false
            )
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }

            def Shader "OcclusionSurface"
            {
                uniform token info:id = "ND_realitykit_occlusion_surfaceshader"
                token outputs:out
                float2 ui:nodegraph:node:pos = (-245.59766, 28.867188)
                int ui:nodegraph:node:stackingOrder = 5
            }
        }
    }

    def "SkyDome" (
        active = true
        prepend references = @BuildingBlocks/SkyDome.usdz@
    )
    {
        float3 xformOp:scale = (0.01, 0.01, 0.01)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

