#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["TreeMat", "Tree", "Cone"]
    def Xform "Tree" (
        active = true
    )
    {
        float3 xformOp:translate = (0, 0.17147842, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Cone "Cone" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform token axis = "Y"
            double height = 0.3
            rel material:binding = </Root/TreeMat>
            double radius = 0.5
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -0.15, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cone "Cone_1" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform token axis = "Y"
            double height = 0.3
            rel material:binding = </Root/TreeMat>
            double radius = 0.45
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cone "Cone_2" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform token axis = "Y"
            double height = 0.3
            rel material:binding = </Root/TreeMat>
            double radius = 0.4
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (-0.0049608797, 0.15, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cone "Cone_3" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform token axis = "Y"
            double height = 0.3
            rel material:binding = </Root/TreeMat>
            double radius = 0.35
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0.3, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Cone "Cone_4" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform token axis = "Y"
            double height = 0.3
            rel material:binding = </Root/TreeMat>
            double radius = 0.3
            float2 ui:nodegraph:node:pos = (80, 80)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0.45, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (1, 0.90000004, 1)
                float height = 0.90000004
                token shapeType = "Capsule"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, 0.15, 0)
                }
            }
        }
    }

    def Material "TreeMat"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/TreeMat/DefaultSurfaceShader.outputs:surface>

        def Shader "DefaultSurfaceShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.003921569, 0.38039216, 0.41960785) (
                colorSpace = "srgb_texture"
            )
            float inputs:roughness = 0.75
            token outputs:surface
        }
    }
}

