#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Material", "Cube"]
    def Material "Material"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/Material/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (0, 110.5)

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0.75
            float inputs:clearcoatRoughness = 0.1
            color3f inputs:diffuseColor = (0.999996, 1, 1) (
                colorSpace = "srgb_texture"
            )
            float inputs:ior = 1.5
            float inputs:metallic = 0.75
            float inputs:opacity = 1
            float inputs:roughness = 0.1
            token outputs:surface
        }
    }

    def "painting_frame_05" (
        active = true
        references = @painting_frame_05.usdz@
    )
    {
        reorder nameChildren = ["Cube", "Geom", "Materials"]
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 1.24, -1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Geom"
        {
            over "painting_frame_05" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/MaplePlywood> (
                    bindMaterialAs = "weakerThanDescendants"
                )
            }
        }

        def Cube "Cube" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/Material> (
                bindMaterialAs = "weakerThanDescendants"
            )
            double size = 0.45
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 0.02)
            float3 xformOp:translate = (0, 0, 0.020563424)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def "MaplePlywood" (
        active = true
        references = @MaplePlywood.usdz@
    )
    {
        color3f inputs:Basecolor_Tint = (0.6679979, 0.47512126, 0.2586011) (
            colorSpace = "srgb_texture"
        )
    }
}

