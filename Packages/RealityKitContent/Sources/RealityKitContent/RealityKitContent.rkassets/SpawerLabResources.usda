#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["ShapeVisMat", "StepDome", "Subject", "Base", "ShapeVis"]
    def "StepDome" (
        active = true
        references = @BuildingBlocks/StepDome.usda@
    )
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "Subject" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 1.1611724e-8, -4.5045936e-9)
        }
        references = @BuildingBlocks/StepSphereBlue.usda@
    )
    {
        double radius = 0.05
        float2 ui:nodegraph:node:pos = (40, 40)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (1, 1.30765244e-17, 5.805862e-9, -2.2522968e-9)
        float3 xformOp:scale = (1, 1, 1)

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double restitution = 1
            }
        }

        over "Collider"
        {
            over "Shape"
            {
                float radius = 0.05
                token shapeType = "Sphere"
            }
        }
    }

    def Cube "Base" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Base/BaseMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2

        def Material "BaseMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/Base/BaseMaterial/DefaultSurfaceShader.outputs:surface>
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.41960785, 0.003921569, 0.17254902) (
                    colorSpace = "srgb_texture"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Cube "ShapeVis" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/ShapeVis/ShapeVisMat> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2

        def Material "ShapeVisMat"
        {
            token cullMode = "front" (
                allowedTokens = ["unspecified", "none", "front", "back"]
            )
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/ShapeVis/ShapeVisMat/DefaultSurfaceShader.outputs:surface>
            float2 ui:nodegraph:node:pos = (20, 20)
            int ui:nodegraph:node:stackingOrder = 1

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:opacity = 0.1
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }
}

