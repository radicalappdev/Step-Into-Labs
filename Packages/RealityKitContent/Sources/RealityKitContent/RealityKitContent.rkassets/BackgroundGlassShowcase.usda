#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (494.8.1)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["DirectionalLight", "BlurredBackgroundMat", "Sphere_0", "Sphere_1", "Sphere_2", "ToyRocket", "ToyBiplane", "ToyCar", "spin_rocket", "loop", "RCP_BehaviorsContainer", "OnAddedToScene", "spin_car", "spin_plane"]
    def Material "BlurredBackgroundMat"
    {
        token cullMode = "front" (
            allowedTokens = ["unspecified", "none", "front", "back"]
        )
        token outputs:mtlx:surface.connect = </Root/BlurredBackgroundMat/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = None
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (599.75, 154.5)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 3

        def Shader "DefaultSurfaceShader" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1, 1, 1)
            float inputs:roughness = 0.75
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            float inputs:clearcoat
            float inputs:clearcoatRoughness
            color3f inputs:diffuseColor.connect = </Root/BlurredBackgroundMat/BlurredBackground.outputs:out>
            color3f inputs:emissiveColor.connect = None
            float inputs:ior
            float inputs:metallic
            float3 inputs:normal
            float inputs:occlusion
            float inputs:opacity = 1
            float inputs:opacityThreshold
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (358, 154.5)
            int ui:nodegraph:node:stackingOrder = 43
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["Advanced", "inputs:diffuseColor"]
        }

        def Shader "BlurredBackground"
        {
            uniform token info:id = "ND_realitykit_background_blur_color3"
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (102.25, 154.5)
            int ui:nodegraph:node:stackingOrder = 51
        }
    }

    def "ToyRocket" (
        active = true
        references = @ToyRocket.usdz@
    )
    {
        reorder nameChildren = ["geom", "Collider", "InputTarget"]
        float3 xformOp:scale = (2.5, 2.5, 2.5)
        float3 xformOp:translate = (0, 0.9, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.14075813, 0.23484674, 0.14075813)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-1.1175871e-8, 0.12399037, -3.7252903e-9)
                }
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }
    }

    def Sphere "Sphere_1" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/BlurredBackgroundMat> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.5
        float2 ui:nodegraph:node:pos = (868, 283)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (-1.2, 1.2, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Sphere "Sphere_2" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/BlurredBackgroundMat> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.5
        float2 ui:nodegraph:node:pos = (888, 303)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (1.2, 1.2, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "ToyBiplane" (
        active = true
        references = @ToyBiplane.usdz@
    )
    {
        float3 xformOp:scale = (2.5, 2.5, 2.5)
        float3 xformOp:translate = (1.2, 1.05, -1.4)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.25410354, 0.10948083, 0.23672129)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-0.0003277585, 0.054739587, -0.0010612011)
                }
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }
    }

    def "ToyCar" (
        active = true
        references = @ToyCar.usdz@
    )
    {
        float3 xformOp:scale = (2.5, 2.5, 2.5)
        float3 xformOp:translate = (-1.2, 1.1, -1.4)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.12440349, 0.116056755, 0.313117)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (3.7252903e-9, 0.058028363, 0)
                }
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }
    }

    def RealityKitTimeline "spin_rocket"
    {
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 12
                uniform token info:id = "400BCDAC-F70C-463B-A89C-EDF20B497927"
                double startTime = 0
                rel target = </Root/ToyRocket>

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }
        }
    }

    def RealityKitTimeline "loop"
    {
        reorder nameChildren = ["Track", "Track2", "Track3"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 12
                uniform token info:id = "DBCFEBA5-DF87-4A09-9005-B9CA8D995F75"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/spin_rocket>
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 12
                uniform token info:id = "E33E6BA5-AD92-40B5-9628-45B5C54D7F92"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/spin_car>
            }
        }

        def RealityKitTrack "Track3"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 12
                uniform token info:id = "26748A90-CA22-4F69-81DA-C2AB5482308E"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/spin_plane>
            }
        }
    }

    def RealityKitComponent "RCP_BehaviorsContainer"
    {
        rel behaviors = </Root/OnAddedToScene>
        uniform token info:id = "RCP.BehaviorsContainer"
    }

    def Preliminary_Behavior "OnAddedToScene"
    {
        rel actions = </Root/OnAddedToScene/Action>
        uniform bool exclusive
        rel triggers = </Root/OnAddedToScene/Trigger>

        def Preliminary_Trigger "Trigger"
        {
            rel affectedObjects = </Root>
            token info:id = "SceneTransition"
        }

        def Preliminary_Action "Action"
        {
            rel affectedObjects = </Root>
            rel animationLibraryKey = </Root/loop>
            rel animationLibraryKeyOverrideKey = </Root/OnAddedToScene/Trigger>
            token info:id = "PlayTimeline"
            int loops = 0
            int performCount = 1
            token type = "serial"
        }
    }

    def RealityKitTimeline "spin_car"
    {
        float2 ui:nodegraph:node:pos = (868, 283)
        int ui:nodegraph:node:stackingOrder = 1

        def RealityKitTrack "Track"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 12
                uniform token info:id = "400BCDAC-F70C-463B-A89C-EDF20B497927"
                double startTime = 0
                rel target = </Root/ToyCar>

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }
        }
    }

    def RealityKitTimeline "spin_plane"
    {
        float2 ui:nodegraph:node:pos = (868, 283)
        int ui:nodegraph:node:stackingOrder = 1

        def RealityKitTrack "Track"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 12
                uniform token info:id = "400BCDAC-F70C-463B-A89C-EDF20B497927"
                double startTime = 0
                rel target = </Root/ToyBiplane>

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }
        }
    }

    def Xform "DirectionalLight" (
        customData = {
            float3 rotationEulerHint = (-0.5479528, 0.61964726, 3.660844e-8)
        }
    )
    {
        quatf xformOp:orient = (0.9168658, -0.2576795, 0.29351902, 0.082491726)
        float3 xformOp:scale = (1, 1, 1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "DirectionalLight"
        {
            token info:id = "RealityKit.DirectionalLight"

            def RealityKitStruct "Shadow"
            {
            }
        }
    }

    def Sphere "Sphere_0" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/BlurredBackgroundMat> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.5
        float3 xformOp:translate = (0, 1.2, -1.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

