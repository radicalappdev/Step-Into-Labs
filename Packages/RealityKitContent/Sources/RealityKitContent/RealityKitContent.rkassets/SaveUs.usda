#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (494.8.1)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Light_1_Spin", "Loop"]
    def Xform "Light_1" (
        active = true
        customData = {
            float3 rotationEulerHint = (0.5156432, -4.310769e-8, 3.1415927)
        }
    )
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (-4.2266628e-8, 1.11453e-8, 0.25497475, 0.96694773)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, -4)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Cone "Cone" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["DefaultMaterial", "SpotLight", "Anchor"]
            uniform token axis = "Y"
            double height = 10
            rel material:binding = </Root/Light_1/Cone/DefaultMaterial>
            double radius = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, -5, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token cullMode = "front" (
                    allowedTokens = ["unspecified", "none", "front", "back"]
                )
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Light_1/Cone/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    float inputs:clearcoat = 0
                    color3f inputs:diffuseColor = (1, 0.83234566, 0.47320586) (
                        colorSpace = "srgb_texture"
                    )
                    color3f inputs:emissiveColor = (1, 0.83234566, 0.47320586) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:metallic = 0.5
                    float inputs:opacity = 0.1
                    float inputs:roughness = 0.9
                    token outputs:surface
                }
            }

            def Xform "SpotLight" (
                customData = {
                    float3 rotationEulerHint = (1.5707964, -7.993959e-8, 3.1415927)
                }
            )
            {
                quatf xformOp:orient = (-5.917153e-8, -2.6457112e-9, 0.70710677, 0.70710677)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 2, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def RealityKitComponent "SpotLight"
                {
                    float attenuationFalloffExponent = 0
                    float attenuationRadius = 10
                    float3 color = (1, 0.66011083, 0.1900736)
                    token info:id = "RealityKit.SpotLight"
                    float innerAngle = 60
                    float outerAngle = 100

                    def RealityKitStruct "Shadow"
                    {
                        bool isEnabled = 1
                    }
                }
            }

            def Xform "Anchor" (
                active = true
                customData = {
                    float3 rotationEulerHint = (1.5707964, 0, 3.1415925)
                }
            )
            {
                quatf xformOp:orient = (5.3385076e-8, 5.3385076e-8, 0.70710677, 0.70710677)
                float3 xformOp:scale = (25, 25, 25)
                float3 xformOp:translate = (-3.6994967e-9, -4.95, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }
    }

    def RealityKitTimeline "Light_1_Spin"
    {
        reorder nameChildren = ["Track", "Track2"]
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1

        def RealityKitTrack "Track"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 5
                uniform token info:id = "C855B25A-08D8-4FC9-AFB8-582625202204"
                float3 localAxis = (0.2, 1, 0)
                float revolutions = 1
                double startTime = 0
                rel target = </Root/Light_1>

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 5
                uniform token info:id = "C855B25A-08D8-4FC9-AFB8-582625202204"
                float3 localAxis = (0, 0, -1)
                float revolutions = 1
                double startTime = 0
                rel target = </Root/Light_1/Cone/Anchor>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }
        }
    }

    def RealityKitTimeline "Loop"
    {
        reorder nameChildren = ["Track2", "Track"]
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Play_Timeline"
            {
                string actionKind = "timeline"
                int blendLayer = 500
                double duration = 5
                uniform token info:id = "2C7F74FE-1AC7-4385-937F-624359F4BB6D"
                double loopCount = 0
                double startTime = 0
                rel timeline = </Root/Light_1_Spin>
            }
        }
    }

    def RealityKitComponent "RCP_BehaviorsContainer"
    {
        rel behaviors = </Root/OnAddedToScene>
        uniform token info:id = "RCP.BehaviorsContainer"
    }

    def Preliminary_Behavior "OnAddedToScene"
    {
        rel actions = </Root/OnAddedToScene/Action>
        uniform bool exclusive
        rel triggers = </Root/OnAddedToScene/Trigger>

        def Preliminary_Trigger "Trigger"
        {
            rel affectedObjects = </Root>
            token info:id = "SceneTransition"
        }

        def Preliminary_Action "Action"
        {
            rel affectedObjects = </Root>
            rel animationLibraryKey = </Root/Loop>
            rel animationLibraryKeyOverrideKey = </Root/OnAddedToScene/Trigger>
            token info:id = "PlayTimeline"
            int loops = 0
            int performCount = 1
            token type = "serial"
        }
    }
}

